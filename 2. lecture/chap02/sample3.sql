-- sample3.sql


-- ******************************************************
-- SELECT 문의 기본구조와 각 절의 실행순서
-- ******************************************************
--  - Clauses -                 - 실행순서 -
--
-- SELECT clause                    (5) : 필수 절
-- FROM clause                      (1) : 필수 절
-- WHERE clause                     (2) : 1차 조건절(레코드를 필터링)
-- GROUP BY clause                  (3) : 조건절을 만족시킨 데이터를 그룹핑
-- HAVING clause                    (4) : 2차 조건절(그룹을 필터링)
-- ORDER BY clause                  (6) : 정렬
-- ******************************************************


-- ------------------------------------------------------
--        *** SELECT 문의 기본문법 구조 ***
-- ------------------------------------------------------
-- SELECT [DISTINCT] { *, column [AS] [alias], ... } DISTINCT: 중복 레코드 제거
-- FROM <테이블명>
-- ------------------------------------------------------

-- ------------------------------------------------------
-- 1. Concatenation Operator(연결 연산자): ||
-- ------------------------------------------------------
-- SELECT column1 || column2
-- FROM table;
-- ------------------------------------------------------
-- (1) 문자열 + 숫자 : 숫자가 문자열로 바뀌어서 수행된다. (자동형변환)
SELECT 
    last_name || salary AS "이름 월급"
FROM
    employees;


-- (2) 문자열 + 날짜 : 날짜가 문자열로 바뀌어 수행
SELECT
    last_name || hire_date AS "이름 날짜"
FROM
    employees;

-- ------------------------------------------------------
-- 2. Concatenation Operator: ||
-- ------------------------------------------------------
-- SELECT column || literal
-- FROM table;
-- ------------------------------------------------------
-- (3) 문자열 + 리터럴(문자열)
SELECT
    last_name || '사원'   --문자열 리터럴은 ""가 아닌 ''로 만듦.(""는 별칭 목적)
FROM
    employees;


-- ------------------------------------------------------
-- 3. Concatenation Operator: ||
-- ------------------------------------------------------
-- SELECT column1 || literal || column2 || literal || column3
-- FROM table;
-- 제약 없이 계속 이을 수 있음.
-- ------------------------------------------------------
SELECT
    last_name || '의 직무는 ' || job_id || ' 입니다.' AS "사원별 직급"
FROM 
    employees;


SELECT
    last_name || ' 의 직무는 ' || job_id
FROM
    employees
WHERE                       -- *** : 이 절의 목적: 1차 필터링(조건식 생성)
    last_name = 'Smith';    -- = : 동등비교연산자




